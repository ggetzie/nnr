# Generated by Django 3.0.1 on 2020-02-07 12:29

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LetterCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(default='', max_length=3, unique=True, verbose_name='Letter')),
                ('quantity', models.IntegerField(default=0, verbose_name='Quantity')),
            ],
            options={
                'ordering': ['letter'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('title_slug', models.SlugField(max_length=150, unique=True, verbose_name='Title Slug')),
                ('ingredients_text', models.TextField(verbose_name='Ingredients')),
                ('ingredients_html', models.TextField(verbose_name='Ingredients HTML')),
                ('instructions_text', models.TextField(verbose_name='Instructions')),
                ('instructions_html', models.TextField(verbose_name='Instructions HTML')),
                ('first_letter', models.CharField(default='', max_length=3, verbose_name='First Letter')),
                ('sort_title', models.CharField(default='', max_length=150, verbose_name='Sort Title')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Date Created')),
                ('featured', models.BooleanField(default=False, verbose_name='Recipe of the Day')),
                ('last_featured', models.DateField(default=datetime.date(1970, 1, 1), verbose_name='Last Featured')),
            ],
            options={
                'ordering': ['sort_title'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('name_slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'ordering': ['name_slug'],
            },
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.Recipe')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '⭐'), (2, '⭐⭐'), (3, '⭐⭐⭐'), (4, '⭐⭐⭐⭐'), (5, '⭐⭐⭐⭐⭐')], verbose_name='Rating')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.Recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', 'recipe__sort_title'],
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(through='recipes.UserTag', to='recipes.Tag'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='reciperating',
            constraint=models.UniqueConstraint(fields=('recipe', 'user'), name='unique_recipe_rating'),
        ),
    ]
